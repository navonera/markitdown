name: Build and Release Image

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    # Required so the workflow can fetch an OIDC token for AWS
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION:      us-east-1           # ðŸ”§ TODO e.g. eu-west-1
      ECR_REPOSITORY:  pdftomarkitdown     # ðŸ”§ TODO your repository name

    steps:
      # ---------- Source ----------
      - name: Checkout repository
        uses: actions/checkout@v3

      # ---------- AWS credentials ----------
      # Preferred: short-lived creds via GitHub-to-AWS OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}   # ðŸ”§ TODO IAM role ARN
          aws-region: ${{ env.AWS_REGION }}

      # Fallback: static keys
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region:            ${{ env.AWS_REGION }}

      # ---------- Login to ECR (reference actionâ€™s example) ----------
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2   # README example âžœ :contentReference[oaicite:0]{index=0}

      # ---------- Build & push multi-arch image ----------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          platforms: linux/amd64,linux/arm64
